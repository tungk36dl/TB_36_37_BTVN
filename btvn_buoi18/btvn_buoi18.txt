
-- ----------------------- Bai 1: 
CREATE TABLE giao_vien (
	ma_gv int PRIMARY KEY AUTO_INCREMENT,
	ho_ten VARCHAR(255),
	luong DOUBLE,
	gioi_tinh VARCHAR(25),
	dia_chi VARCHAR(255)
);

CREATE TABLE tham_gia_de_tai (
	ma_gv INT,
	ma_dt INT,
	stt INT,
	ket_qua VARCHAR(255)
);

INSERT INTO giao_vien (ho_ten, luong, gioi_tinh, dia_chi)
VALUES
	("Nguyễn Văn Ngọc", 10 , "Nam" , "HN"),
	("Phạm Văn Nam", 12 , "Nam" , "DN"),
	("Trần Văn Hải", 15 , "Nu" , "HP");

INSERT INTO tham_gia_de_tai (ma_gv, ma_dt, stt, ket_qua)
values
	(1, 1, 1, "OK"),
	(3, 1, 2, "OK"),
	(3, 1, 3, "OK"),
	(1, 1, 4, "OK"),
	(3, 1, 5, "OK");

-- Tim cac giao vien khong tham gia de tai nao.
SELECT * 
FROM giao_vien
WHERE ma_gv not IN 
(
	SELECT ma_gv 
	FROM tham_gia_de_tai
	GROUP BY ma_gv
);


-- ------------------------------- Bai 2:

CREATE TABLE giao_vien2 (
	id INT PRIMARY KEY AUTO_INCREMENT,
	ho_ten VARCHAR(50),
	luong FLOAT,
	gioi_tinh VARCHAR(50)
);

CREATE TABLE bo_mon (
	id INT PRIMARY KEY AUTO_INCREMENT,
	ten_bo_mon VARCHAR(50),
	dien_thoai VARCHAR(50),
	truong_bo_mon INT,
	
	FOREIGN KEY (truong_bo_mon) REFERENCES giao_vien2(id)
);

-- Tìm tất cả giáo viên là trưởng bộ môn dùng 2 cách là join và cách truy vấn lồng

INSERT INTO giao_vien2 (ho_ten, luong, gioi_tinh)
VALUE 
	("Pham Tung", 5000, "nam"),
	("Nguyen Ngoc", 2000, "nu"),
	("Pham Thiep", 2500, "nam"),
	("Bui Hoang", 4000, "nam"),
	("Nguyen Hien", 5000, "nu");
	
INSERT INTO bo_mon (ten_bo_mon, dien_thoai, truong_bo_mon)
VALUE 
	("Toan", 123, 1),
	("Van", 123, 2),
	("Ly", 123, 1),
	("Hoa", 123, 1),
	("Su", 123, 4),
	("Sinh", 123, 4),
	("Dia", 123, 2);
	
	
-- Cach 1: voi Join
SELECT DISTINCT * 
FROM giao_vien2
JOIN bo_mon ON giao_vien2.id = bo_mon.truong_bo_mon;

SELECT DISTINCT giao_vien2.* 
FROM giao_vien2
JOIN bo_mon ON giao_vien2.id = bo_mon.truong_bo_mon;

-- Cach 2: truy van long

SELECT distinct truong_bo_mon 
FROM bo_mon;

SELECT * 
FROM giao_vien2
WHERE id IN 
(
	SELECT distinct truong_bo_mon 
	FROM bo_mon
);

 
